Pie {
    pieFile = (comment | topLevel | blankLine)*

    topLevel = environmentSpec | environmentalDef | requestDef | processorDef

    environmentalDef = headerDef | variableDef

    headerDef (Header)
    = identifier separator<":"> value

    variableDef
    = "$" identifier separator<"="> variableValue comment?

    environmentSpec (Environment)
    = "@" identifier separator<":"> comment? inEnvDefs

    inEnvDefs
    = (inEnvDef | blankLine)*

    inEnvDef (Indented Header or variable)
    = eos indent environmentalDef

    processorDef
    = "PROCESSOR" space+ identifier space+ "```" processorStatement* "```"

    processorStatement
    = ~"```" any

    processorValue
    = identifier | variableValue

    processorPipe (Processor Pipe)
    = space+ "|" space+ identifier

    requestDef (Request)
    = requestMethod requestPath processorPipe? #eos requestHeaders? requestBody?

    requestMethod
    = methodName space+

    // TODO allow trailing comments?
    requestPath
    = (~eol ~space any)+

    requestHeaders
    = (headerDef eos)+

    methodName (HTTP Request Method)
    = ~"PROCESSOR" upper+

    requestBody (Any series of non-blank lines)
    = (~emptyLine value eos)+

    comment (a comment)
    = space* "#" value

    commentAtEol (a comment)
    = comment eol

    variableValue
    = stringValue | numberValue

    stringValue (a string literal)
    = "\"" ((~("\"" | "\\") any) | "\\\\" | "\\\"")* "\""

    numberValue (a number literal)
    = digit+

    eol (End of line)
    = "\n" | "\r"

    eos (End of statement)
    = eol | commentAtEol | end

    blankLine = eol space* comment?
    emptyLine = eol space* (eol | commentAtEol)

    separator<token> = spaces token spaces
    value = (~eol any)+
    identifier = (alnum | "-")+
    indent = "\t" | "  "+
    space := (" " | "\t")+
}
